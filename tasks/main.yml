---

- name: Set up a Consul key/value store
  docker:
    name: consul
    image: progrium/consul
    command: -server -bootstrap
    state: started
    restart_policy: always
    ports:
    - "8300:8300"
    - "8400:8400"
    - "{{ docker_swarm_consul_port }}:{{ docker_swarm_consul_port }}"
    - "8600:53/udp"
  when: inventory_hostname == groups['debops_docker_swarm'][0]

- name: Start the swarm agent
  docker:
    name: swarm_agent
    image: swarm
    command: join --advertise={{ hostvars[inventory_hostname]['ansible_' + docker_swarm_adapter]['ipv4']['address'] }}:{{ docker_swarm_tcp_port }} consul://{{ hostvars[groups['debops_docker_swarm'][0]]['ansible_' + docker_swarm_adapter]['ipv4']['address'] }}:{{ docker_swarm_consul_port }}/
    state: started
    restart_policy: always

# Overrides value in defaults/main.yml when PKI is enabled. This was done to
# avoid problems with variable lookups inside of inline conditionals.
- set_fact:
    docker_swarm_master_opts: "--tlsverify --tlscacert {{ docker_swarm_pki_dir }}/{{ docker_swarm_pki_ca }} --tlscert {{ docker_swarm_pki_dir }}/{{ docker_swarm_pki_crt }} --tlskey {{ docker_swarm_pki_dir }}/{{ docker_swarm_pki_key }}"
  when: (ansible_local|d() and ansible_local.pki|d() and ansible_local.pki.enabled|d())

- name: Start the swarm manager
  docker:
    name: swarm_manager
    image: swarm
    command: manage {{ docker_swarm_master_opts }} consul://{{ hostvars[groups['debops_docker_swarm'][0]]['ansible_' + docker_swarm_adapter]['ipv4']['address'] }}:{{ docker_swarm_consul_port }}/
    state: started
    restart_policy: always
    ports:
    - "{{ docker_swarm_master_daemon_port }}:2375"
    volumes:
    - "{{ docker_swarm_pki_dir }}:{{ docker_swarm_pki_dir }}"
  when: inventory_hostname == groups['debops_docker_swarm'][0]

# Make sure we don't attempt to set up the overlay twice.
- name: Check swarm overlay networking
  shell: docker {{ docker_swarm_master_opts }} -H=tcp://{{ hostvars[groups['debops_docker_swarm'][0]]['ansible_' + docker_swarm_adapter]['ipv4']['address'] }}:{{ docker_swarm_master_daemon_port }} network ls
  register: swarmOverlayNet
  changed_when: false
  when: inventory_hostname == groups['debops_docker_swarm'][0]

- name: Set up overlay network
  shell: docker {{ docker_swarm_master_opts }} -H=tcp://{{ hostvars[inventory_hostname]['ansible_' + docker_swarm_adapter]['ipv4']['address'] }}:{{ docker_swarm_master_daemon_port }} network create -d overlay {{ docker_swarm_overlay_name }}
  when: (inventory_hostname == groups['debops_docker_swarm'][0]) and (swarmOverlayNet.stdout.find(docker_swarm_overlay_name) < 1)
